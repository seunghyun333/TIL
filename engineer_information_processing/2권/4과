모듈화

1. 결합도 coupling
낮은게 좋음 , 모듈 간의 연관관계
<<결합도 정도>> 데스제외공내
데이터 결합도 < 스탬프 결합도 < 제어 < 외부 < 공통 < 내용 

2. 응집도 cohesion
모듈내 끈끈함. 높은게 좋음, 한 모듈 내부 
<<정도>> 기순교절시논우
기능>순차>교환>절차>시간>논리>우연

응집도는 강하게, 결합도는 약하게
복잡도, 중복성 줄이고, 일관성 유지 


C언어의 개요
1972년 벨 연구소 데니스 리치 개발
컴파일 언어. 포인터에 의한 번지연산등 다양한 연산 기능을 가진다. 
이식성이 뛰어나고 Unix 운영체제에서 사용 

main함수에서 시작 
int 2 long 4 /float 4 double 8 /char 1

기억클래스
자동변수, 레지스터변수, 정적변수, 외부변수

입출력 표준 함수
입력 : scanf()
출력 : printf()
문자입력 : getchar()
문자출력 : putchar()
문자열 입력 : gets()
문자열 출력 : puts()

변환문자
%d 10진 정수
%o 8진 정수
%x 16진 정수
%f 실수형
%e 지수형
%c 문자
%s 문자열 

이스케이프 시퀀스
** \n : new line 다음 줄 처음으로 이동
** \r : carriage return 커서를 현재 줄 처음으로 이동
\t : tab 
\b : backspace
\f :form feed 한 페이지 넘김
\0 : 널문자 출력
\'   작은 따옴표 출력          '
\"   큰 따옴표 출력          "
\\
\a : 벨소리 

<c언어 변수명 작성 규칙 >
영문 대소문자, 숫자, _ 혼용하여 사용가능 
첫글자는 숫자로 시작할 수 없고, 영문자나 _로 시작해야한다.
영문자는 대소문자를 구분하고, 공백을 포함할 수 없다
32개 예약어 사용불가 

10:50
포인터변수 
다른 변수의 주소값을 저장할 수 있음 . 실제 주소가 아니고 위치. 메모리의 용량때문에 사용했었음. 자료형에 상관없이 크기가 동일
읽기위해서는 *연산자사용 *P

표준 라이브러리함수
stido.h : C언어 표준 입출력 라이브러리 
종류
atio() 문자를 정수형
atof()  문자를 실수
atol() 문자를 long
itoa() 숫자를 문자열로
ceio() 자리올림
floor() 자리버림
rand() 난수발생
div 정수 나눗셈 

C언어의 연산자
우선순위 높은 순위로 
단항연산자 산술연산자 시프트연산자<< >> 관계 ==, !- 비트 &, ^ ,|(논리합 // true면 true, 두 비트 중 1개라도 1이면 1이 출력됨 ), 논리(!논리부정, &&논리곱, ||논리합) 조건(삼항 연산자 ? :) 할당 콤마 

단항연산자  
! 부정
~ 1의 보수
 ++ 1씩 증가
 -- 1씩 감소
& 주소
* 내용
sizeof 변수, 배열 저장장소의 크기를 byte단위로 구한다 

할당연산자
a+=b   : a=a=+b
a-=b   : a=a-b
a*=b   : a=a*b
a/=b   : a=a/b
a%=b   : a=a%b
a<<=b   : a=a<<b
a>>b   : a=a>>b

라이브러리 
묘듈과 패키지 총칭, 표준라이브러리 = 기본적으로 언어가 가지고 있는 

------------------------------------
Java
객체지향언어
gabage Collector : 메모리에서 사용하고 남은 나머지를 JVM 가비지 컬럭터가 알아서 정리해줌 
1바이트 = 8비트 

이스케이프 시퀀스 
접근제어자
public 모든 접근 허용
private 같은 패키지와 상속관계
default 같은 패키지에 있는 객체들만
protected 현재 객체 내에서만

출력함수
system.out.print
systme.out.println
System.out.printf() : 변환문자를 사용하여 출력 

변수면 $사용 가능 

연산자 우선순위
단항 > 산술> 비트 관계 논리 비트 조건 할당 

오버로딩 : 이름같고 매개변수 다르게 
오버라이딩 : 상속 하위 클래스에서 재정의  
--------------------
제어문 
if, if/else, if/else if/else 
삼항연산자 k = (i>j)?(i+j);(i-j);
switch~case
switch(조건값)
{ case 값1 : 
   조건값이 1일 때 실행하는 명령문 ;
   break;
  case 값2 : 
   조건값이 2일 때 실행하는 명령문 ;
   break;

   default:
    값
    break; }

while(조건식)
{ 명령문 1; 
  명령문 n;}

do(조건식)
{ 명령문 1; 
  명령문 n;}
while(조건식)
{ 명령문 1; 
  명령문 n;}


---------------------
스크립트 언어
소스코드 컴파일 과정을 거치지 않고 한 행씩 실행 가능 

종류
(서버측 스크립트 언어)
ASP윈도우, JSP자바, PHP리눅스유닉스(연산자 있음)
파이썬: 인터프리터(한 행씩) 방식의 객체 지향언어 

(클라이언트 측 스크립트 언어)
JavaScirpt: 자바를 이용한 웹스크립트   
VBScript: 비주얼베이직 스크립트, 액티브 

파이썬
귀도 반 로썸 개발, 독립적, 인터프리터식 ,객체지향, 대화형 

변수명 작성규칙 '_' 가능 
인덱스 0부터 시작 , 맨 오른쪽의 인덱스는 -1 
첨부터 끝까지 :
7번째부터 끝까지 7:, -3:
첨부터 인덱스까지 :3
x부터 y까지 1:3
x부터 (y-1)까지 z만큼 건너뛰면서 추출 1:8:2


---------------------
운영체제
운영방식: 일괄(배치), 다중프로그램, 시분할(cpu전체를 시간을쪼개서봄), 다중처리(cpu여러개), 실시간, 다중로드, 분산 
구성 : 제어기능/ 처리기능
제어프로그램(감시, 작업, 데어터관리) 감작대 
처리프로그램(언어번역, 서비스,문제) 서문언

반환시간 turn around time


-------------------
프로세스 관리 40:40
프로세스 : 하나의 작업 단위, 운영체제가 관리함
실행중인 프로그램, PCB(프로세스 제어블록: 운영체제가 프로세스를 관리하기 위한 저장소)를 가진 프로그램

프로세스 상태전이
1. 생성 new
2. 준비 ready
3. 실행 running
4. 대기 block
5. 종료 exit

스레드 (운영체제에서 보는 단위 관점)
프로세스 내의 작은 실행 단위 , 모듈(개발 관점)보다도 작은 단위 

병행 프로세스
동시에 실행 상태에 두는 것
임계영역 : 작업이 하나만 들어올 수 있는 영역, 충돌, 오류 방지
상호배제 : 공유 메모리 상 실행중이면 다른애가 들어오지 못하게 막는
동기화기법: 세마포어가 제안한 방법, 연산 P,V를 통해 제어, 수신호 , 모니터

<교착상태: 사거리 교통사고>
상호배제 - 한 번에 한 프로세스만 어떤 자원을 사용할 수 있다
점유 및 대기 - 다른 자원이 할당되기를 기다리는 동안 이미 확보한 자원을 계속 보유하고 있음
비선점 - 강제로 자원을 뺏을 수 없음 
환형 대기 - 계속 돌면서 대기

<교착상태 회복방법>
예방, 회피(은행가 알고리즘 avoidence), 발견, 회복

-------
프로세스 스케줄링
기법
비선점 스케줄링 : 한개가 하고 있으면 치고 들어갈 수 없음. FCFS = FIFO. 순서대로 받음
            SJF : 다 받고 실행 시간이 짧은 순서대로 실행 
            HRN : 서비스를 기다린 시간으로 우선순위 결정(높은걸로)
                  (대기시간 + 서비스를 받을 시간) / 서비스를 받을 시간 : 대서서

            우선순위 
선점 스케줄링 
실행 중간 들어 갈 수 있는.
SRT: 실행중 잔여시간 계산 
큐
-------
기억장치
반입 / 배치(최초 적합, 최적 적합, 최악 접합)

방법
OPT : 이상적
FIFO
LRU : 최근에 가장 적게 쓴애
LFU: 참조된 횟수가 가장 적은 페이지 교체
NUR: 페이지당 두 개의 하드웨어 비트를 두어 가장 최근에 사용하지 않은 페이즈를 교체하는 기법 
SCR : FIFO 보완


가상 기억 장치 구현 
저장방식: 페이징 기법 

구역성 : 프로세스가 한 곳에 집중되는것. 시간 구역/ 공간 구역
워킹셋 : 운영체제가 시피유에 자주 사용하는거 준비해두는것
스래싱 : 작업 전환이 많아질 때 불필요한 시간 

_-------
디스크 스케줄링 
읽어들이는 순서 

FCFS : FIFO, 부하가 크면 응답 지연, 대기 큐에 먼저 들어온 트랙에 대한 요청을 먼저하는 기법, 들어오는 순서대로
SSTF : 탐색 거리 짧은 것들 먼저 
SCAN : 외국 해당 언어 다 익히고 서비스 적게 , 트랙 순서 
C-SCAN: 바깥쪽 - 안쪽으로 훑고 감. 흠.. 

에센바흐 스케줄링 : 
헤드가 진행하는 과정에서 각 실린더에 대한 한 번의 디스크팩 회전 시간동안만 입,출력 요구드들을 처리하는기법
즉, 한 회전동안 서비스를 받지 못하는 요구들에 대한 처리는 다음으로 미룸 

--------
정보관리 1:00:18
파일시스템 : 파일 관리하는 기능
파일제어블록 FCB에 정보가 들어잇음 
파일 디스크립터 : 구조 유형, 크기,이름 ,생성시간, 수정시간 정보가 들어잇음 (파일작성자, 실행시간은 아님 !! )

파일 구조
순차파일, 색인순차파일ISAM (기본 구역, 색인 구역, 오버플로우구역), 직접파일 (키에 일정한 함수를 적용하여 상대 레코드 주소를 얻고, 그 주소를 레코드에 저장하는 파일 구조 )
디렉터리 구조 - 2단계 디렉터리구조(상,하 나뉜)
------------------
(안 나옴)
분산 운영체제
다중처리기 : 멀티 프로세서 , 두 개이상의 CPU, 우연성, 신뢰성, 유연성 
연결방법: 하이퍼큐브 : 10개이상의 프로세스를 병렬 동작, 프로세스 수가 N 개일 경우 2의N승 개의 프로세서가 필요하다 

다중처리기 운영체제구조
주종처리기 (마스터 슬레이브)/ 분리수행 처리기 / 대칭적 처리기
구조 : 약결합(운영체제 각각 돌아가는), 강결합 (하나의 운영체제로 돌아가는, 공유 메모리 )

분산처리 시스템 : 각각 해당하는 투명성이 중요함(위치, 이주, 복제, 병행투명성)
분산 운영체제구조 : 별형, 버스, ...
--------------------
UNIX
시분할방식, 개방형,틔구조, 멀티유저, 멀티태스킹, C

구성: 커널 (핵심), 쉘 (사용자의 시스템 인터페이스), 유티리티(보조프로그램)

구조: 부트블록(운영), 슈퍼블록(전체 파일시스템에 대한 정보 저장)I-node(파일 디스크립터, 각 파일에 대한 정보 저장). 데이터블록

명령어 : fork(프로세스 생성), kill, ...  cat(파일 내용을 메모장 처럼 열람), chmod(파일 사용 권한 변경 chown(소유자 변경)

환경변수 : 쉘이 프로그램들 사이에서 값을 전달해주는 역할을 하는 변수, 프로세스가 컴퓨터에 동작하는 방식에 영향을 미치는 값들의 집합, 기본적으로 대문자 사용 
명령어 : env, set, printenv, echo, setenv
BASH Shell : 리눅스 표준쉘, 입출력 창. 

기출 명령어 공부하기
-----------------------
OSI 7계층
OSI : 개방형 시스템 , 개발 규칙 
물리(하드웨어) > 데이터 링크 > **네트워크(경로설정 담당) > **전송계층 > 세션 (유지) > 표현(신호방식 차이를 변경) > 응용계층(소프트웨어)

물리 ㅣ 프로토콜 x.21(디지털 규격), RS-232C(usb같은 ,,), V.24(아날로그 시리즈)
데이터링크 : 인접한 두 개의 통신 시스템 간에 신뢰성 있는 효율적인 데이터를 전송하는 계층 , 전기가 흐르는 상태. HDLC, PPP, LLC / 두 시스템 간 신뢰성있는 효율적인 데이터를 전송할 수 있는 계층으로, 흐름 제어, 프레임 도기, 오류 제어 수행
네트워크 : 통신망을 통하여 패킷 을 목적지까지 전달, 경로 설정. X.25, IP, ICMP, IGMP
전송 : TCP, UDP 
세션 : 프로세스간 연결 
표현 : 신호는 2진수로 감, 신호를 변환하고, 자료 주고받을때 보안, 코드변환
응용 : 소프트웨어 사용하는 프로토콜, HTTP, FTP, SMTP, Telnet, DNS 

오류제어방식 
자동 : 
정지-대기 Stop and Wait ARQ: 에러발생 유무 ACK 신호를 보냄 . 보내고, 피드백 받고, 보내고, 피드백 받고
연속 ARQ : 1. Go-Back- N ARQ :  쭉 보내다가 오류 피드백이 오면 거기부터 다시 보냄
           2. 선택적 재전송 : 수신측으로부터 NAK 수신 시 오류가 발생한 블록만 재전송 
적응적 ARQ :  신호를 보낼 때 동적으로 변경 

-------------------------
TCP/IP 프로토콜 
Trans 전송(전송계층) Internet 주소경로(네트워크계층) : 인터넷 기본 프로토콜 
OSI 7계층과 좀 다름 4개
링크(물리&데이터링크) / 인터넷(네트워크계층, 주소, 경로 설정) / 전송(전송) / 응용계층(세션, 표현, 응용)

TCP : 신뢰성 / UDP (비신뢰성, 대용량 , 음악 ,영상 )
IP : 비신뢰성 

인터넷계층 : ICMP 프로토콜 (인터넷에서 제어 프로토콜, 메세지 보냄 에코 메세지)
IGMP , ARP(논리주소IP와 물리주소MAC 연결), RARP(물리주소를 논리주소로)

전송계층 
TPC 신뢰성, 기본 헤더 크기 20-40바이트/ UDP  비연결성, 비신뢰, 전송속도 빠름 


-------------
IP 주소
인터넷을 연결하기 위한

IPv4 버전 4 : 32비트 길이, 기본 사용 클래스: C클래스 소규모, 
서브넷 마스크  : 네트워크 관리 수단 , 구분 , 네트워크를 하위로 분류 , 계산 방법은 그냥 생략 ~ 

버전6: IPv6 4의 주소 부족으로 사용 , 인증 보안 기능 ,확장 용이, 멀티미디어, 패킷 크기 고정되어있지 않음. 128비트의 주소 공간 제공 
통신방식: 유니캐스트(1:1), 애니캐스트(1:N), 멀티캐스트(N:N)

4->6 전략
듀얼스택, 터널링, 헤더변환 잇긴 한데 지금 그냥 변환 가능

IEEE 802 표준 규격
802.4 토큰 버스
802.5 토큰 링

CSMA/CA : 무슨 랜에서 데이터 전송 시, 매체가 비어있음을 확인한 뒤 충돌을 회피하기 위해 임의 시간을 기다린 후 데이터 전송
CSMA/CD : 유선 통식 사용 , 공유기 사용 방식 , 충돌 허용하고 어디가 충돌인지 확인 후 회피 혹은 기다림. 
