(1) 관계 데이터 모델
1. 개념 : 실세계 데이터를 행과 열로 구성된 테이블 형태로 구성된 데이터 모델. E.F.Codd박사가 제안
2. 구성요소 
    릴레이션: 행과 열로 구성된 테이블
    튜플: 릴레이션의 행에 해당하는 요소
    속성: 릴레이션의 열에 해당하는 요소
    카디널리티: 튜플의 수
    차수 : 컬럼의, 속성의 수
    스키마 : 데이터베이스의 구조, 제약조건 등의 정보를 담고 있는 기본적인 구조
    인스턴스 : 정의된 스키마에 따라 생성된 테이블에 실제 저장된 데이터의 집합
    식별자 : 여러 개의 집합체를 담고 있는 관계형 데이터베이스에서 각각의 구분할 수 있는 논리적인 개념 
    도메인: 하나의 컬럼이 취할 수 있는 같은 타입의 원자 값들의 집합 

(2) 관계 데이터 언어
1. 관계 대수
 1. 개념 : 관계형 데이터베이스에서 원하는 정ㅈ보와 . 그정보를 어떻게 유도하는가를 기술하고, 관계로 표현된 데이터를 취급하는 대수적인 연산 체계이자 절차적 정형 언어.
 2. 종류 : 가. 일반 집합 연산자(합집합, 교집합, 차집합, 카티션 프로덕트)
          나. 순수 관계 연산자 (셀렉트, 프로젝트, 조인, 디비전)
2. 관계 해석
    1. 개념 : 튜플 관계 해석과 도메인 관계 해석을 하는 비절차적 언어.
    2. 특징 : 프레디킷 해석에 기반한 언어이며 비절차적 언어(원하는 정보가 무엇이라는 것만 선언)
    3. 관계 해석 종류
        가. 도메인 관계 해석: 튜플 변수 대신 도메인 변수를 사용하고, 각 변수는 한 애트리뷰트의 도메인을 범위로 갖는 해석식 
        나. 튜플 관계 해석 : 원하는 릴레이션을 튜플 해석식으로 정희하는 표기법, 구성 요소(튜플 변수, 한정 애트리뷰트, 원자식, 정형식)
        * 관계 해석 논리 기호 : 연산자(OR, AND, NOT), 정량자(전칭 정량자, 존재 정량자)
3. 관계 대수와 관계 해석 비교 
관계 대수 : 절차적 언어(순서 명시), 어떻게 유도하는가(목적), 종류(순수관계 연산자, 일반집합 연산자)
관계 해석 : 비 절차적 언어(계산 수식의 유연적 사용), 프레디킷 해석 기반, 무엇을 얻을 것인가?(목적), 종류(튜플 관계 해석, 도메인 관계해석)

(3) 시스템 카탈로그 
1. 개념 : 데이터베이스에 저장되는 테이블, 뷰, 인덱스, 접근 권한 등에 대한 정보를 저장하는 데이터베이스. DDL 실행으로 생성되는 테이블, 뷰, 인덱스, 패키지, 접근 권한 등의 데이터베이스구조 및 통계 정보를 저장한다. 
2. 특징 : 자료 사전이라고도 부른다. 저장도니 정보를 메타 데이터라고 부른다. 테이블로 구성되어 있어 SQL을 이용하여 내용을 검색할 수 있다. 
        INSERT< DELETE< UPDTATE 문으로 시스템 카탈로그를 갱신하는 것은 허용되지 않는다. (시스템 카탈로그는 DBMS가 스스로 생성하고 유지)
        사용자, SQL문을 실행시켜 기본 테이블, 뷰, 인덱스 등에 변화를 주면 시스템이 자동으로 갱신된다. 
        보통의 릴레이션, 인덱스, 사용자 등에 정보를 포함할 뿐 아니라 위치 투명성 및 중복 투명성을 제공하기 위해 필요한 모든 제어정보 포함한다. 