1. 개발환경 구축 
[기출문제]
1. 형상 통제 : 형상 항목의 버전 관리를 위해서 변경 여부와 변경 활동을 통제하는 활동
2. SVN : 중앙 집중형 클라이언트-서버 방식, 
  CVS: 가장 오래도니 형상 관리 도구, 중앙 집중형 서버 저장소
  GIT: 로컬 저장소와 원격 저장소로 분리되어 분산 저장하는 도구로 빠른 속도에 중점을 둔 분산형 버전 관리 시스템 

[예상문제]
1. 서버 계층에서 애플리케이션이 동작할 수 있는 환경을 제공하고 안정적인 트랜잭션 처리와 관리, 다른 이기종 시스템과의 애플리케이션 연동을 지원하는 서버로 동적 컨텐츠를 ㅈ처리하기 위해 사용하는 환경 
  => WAS 웹 애플리케이션 서버
2. 형상관리에 대한 주요 방침을 정하고 산출물을 검토하며, 단계별 의사결정을 수행하는 조직 
  => CCD 형상통제위원회
3. 매일 개발이 완료된 파일을 약속된 위치의 공유폴도에 복사하는 방식
  => RCS
  중앙 버전 관리 시스템 항시 동작, 클라이언트 서버 구조로 관리되는 형상도구 방식
  => SVN
4. 백업 유형 중 마지막 전체 백업 이후 변경된 모든 데이터를 백업하는 방식 
  => 차등 백업 

2. 모듈 구현
[기출문제]
3. 모듈의 독립성을 높이기 위해 결합도는 약하게 응집도는 강하게 
4. 다른 모듈 내부에 있는 변수나 기능을 다른 모듈에서 사용하는 경우 : 내용 결합도
    모듈간의 인터페이스로 배열이나 객체, 구조등이 전달되는 경우 :스탬프 결합도 
    파라미터가 아닌 모듈 밖에 선언된 전역변수를 참조하고 전역 변수를 갱신하는 식의 상호 작용 : 공통  결합도
5. 단순 처리할 대상인 값만 전달되는 게 아니라 어떻게 처리를 해야한다는 제어요소가 전달되는 경우의 결합도 
  => 제어 결합도 Control Coupling
6. 입출력 간 연관성은 없으나 순서에 따라 수행될 필요가 있음 : 절차적 응집도 
  동일한 입력과 출력을 사용하여 다른 기능 수행 : 통신적 응집도(=교환적 응집도)
  모든 기능들이 연관되어 있는 것 : 기능적 응집도
7. 자바를 이용한 xUnit 테스트 도구, JAVA 단위 테스트 프레임워크 
  => jUnit 

  [예상문제]
  1. 모듈간의 결합도는 즐이고 응집도는 높인 공통 모듈 구현 권장 
  2. 모듈 내부가 아닌 외부 모듈과의 연관도 또는 모듈간의 상호 의존성 : 결합도 
  3. 우연적 논리적 시간적 절차적 통신적 순차적  기능적 응집도
  4. 내용 공통 외부 제어 스탬프 자료 결합도
  5. MVC : 모델 : 애플리케이션이 무엇을 할 것인지 정의, 내부 비즈니스 로직을 처리하기 위한 역할 
            컨트롤러 : 모델이 어떻게 처리할지를 알려주는 역할, 뷰에 명령을 보내어 화면 요청 결과를 전달 
            뷰 : 화면에 무엇인가를 보여주기 위한 역할, 모델, 컨트롤러가 보여주려고 하는 것들을 화면에 처리 

3. 배치 프로그램 구현 
[예상문제]
1. 사용자의 상호 작용 없이 일련의 작업들을 작업 단위로 묶어 정기적으로 반복 수행하거나 정해진 규칙에 따라 일괄 처리하는 방법
=> 배치 프로그램
2. 스프링 프레임워크의 DI, AOP, 서비스 추상화 등 스프링 프레임워크의 3대 요소를 모두 사용할 수 있는 대용량 처리를 제공하는 스케줄러 => 스프링 배치
  스프링 프레임 워크에 플러그인 되어 수행하는 작업과 실행 스케줄을 정의하는 트리거를 분리하여 유연성을 제공하는 오픈 소스 기반 스케줄러 => 쿼츠 스케줄러 
3. 스케줄러를 실행하기 위해 작업이 실행되는 시간 및 주기 등을 설정하게 되는데 (쿼츠 크론) 표현식을 통해 배치 수행 시간을 설정한다. 
4. 쿼츠 크론 표현식 : 초 분 시간 일 월 요일 연
5. * : 모든 수
  ? : 해당 항목을 미사용 
  - : 기간 설정 
  . : 특정 기간 설정 
  / : 시작시간과 반복간격 설정 
  L : 마지막 기간에 동작
  W : 가장 가까운 평일에 동작 
  # : 몇 번째 주, 요일 설정 
6. 0 0 12 * * ? 
   => 매일 12시에 실행한다 
7. 0 0 7 ? MON-SAT 
  => 매주 월요일부터 토요일 7시에 실행한다. 

[단원종합문제]
1. 팬인/팬아웃
2. 개발환경 구축 시 필요한 주요 서버에 대한 설명  / HTTP 요청/ 응답 처리, 정적 콘텐츠 처리 : 웹서버
3. 미들웨어 : 컴퓨터 간의 연결을 쉽고 안전하게 할 수 있도록 해주고 이에 대한 관리를 도와주는 소프트웨어, JVM을 설치하여 컨테이너로의 기능을 주로 사용 
4. xUnit : 자바, C++, .Net 등 다양한 언어를 지원하는 다누이테스트 프레임워크로 소프트웨어의 함수나 클래스 같은 서로 다른 구성 원소를 테스트할 수 있게 해주는 인터페이스 구현 검증 도구
5. 형상관리의 절차 : 식통감기 / 형상 식별, 형상 통제(형상통제위원회), 형상 감사, 형상 기록 
6. 우연적 시간적, 통신적 
7. 공통, 외부, 자료
8. 응집도 :  모듈의 독립성을 나타내는 개념으로 , 모듈 내부 구성요소 간 연관 정도. 정보은닉 개념의 확정개념으로 하나으 ㅣ모듈은 하나의 기능을 수행하는 것을 의미 
9. 모듈화 : 소프트웨어의 성능을 향상시키거나 시스템의 수정 및 재사용, 유지 관리를 용이하게 하여 프로그램을 효율적으로 관리할 수 있도록 시스템을 분해하고 추상화하는 기법 
10. MVC 패턴
11. 쿼츠 크론 표현식
12. 매일 12시 15분에 실행 
13. 매일 5시에서 7시사이 10분마다 실행 
