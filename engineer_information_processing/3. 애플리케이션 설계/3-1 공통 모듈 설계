(1) 재사용
- 함수/객체 재사용, 컴포넌트 재사용, 애플리케이션 재사용

(2) 공통 모듈
모듈 : 크게 독립된 하나의 소프트웨어 또는 하드웨어 단위를 지칭하는 용어, 모듈화를 통해 분리된 시스템의 기능들로 서브프로그램, 서브 루틴, 소프트웨어 내의 단위 프로그램, 작업 단위 등과 같은 의미로 사용
모듈 특징 : 독립성, 다양한 조합, 재사용, 영향 최소화
공통모듈의 개념 : 특정 기능을 처리할 수 있는 실행 코드, 자체적으로 컴파일 가능하고, 다른 프로그램에서 재사용 가능 
공통 모듈의 원칙 : 정확성, 명확성, 완전성, 일관성, 추적성

모듈화 개념 : 프로그램이 효율적으로 관리될 수 있도록 시스템을 분해하고 추상화함으로써 소프트웨어 제품의 성능을 향상시키거나 시스템의 수정 및 재사용, 유지관리를 쉽게하는 기법
루틴 / 메인루틴/ 서브루틴

모듈화 필요성 : 크기가 너무 작아 많아지면 통합 비용이 많이 발생하고(& 상호교류 증과로 과부하 현상), 크기가 너무 크면 모듈 당 개발 비용이 커짐. 
모듈화 측정지표 
            - 응집도: 모듈의 내부 요소들의 서로 관련되어 있는 정도, 모듈이 독립적인 기능으로 정의되어 있는 정도 
            - 결합도: 모듈 간에 상호 의존하는 정도, 두 모듈 사이의 연관 관계를 맺고 있는 정도 

* 응집도 : 모듈의 독립성을 나타내는 개념으로 연관 정도 
우연적 < 논리적 < 시간적 < 절차적 < 통신적 < 순차적 < 기능적 

* 결합도 : 모듈 내부가 아닌 외부의 모듈과의 연관도 또는 모듈 간의 상호 의존성을 나타내는 정도 , 관련성 측정 
내용 > 공통 > 외부 > 제어 > 스탬프 > 자료 결합도 

*팬인 : 어떤 모듈을 제어하는 모듈의 수 (자신을 기준으로 들어옴) 높게 설정 
*팬아웃 : 어떤 모듈에 의해 제어되는 모듈의 수 (자신 기준으로 나감) 낮게 설계해야 좋음 

(3) 설계 모델링 
1. 설계 모델링
필수 기능들의 구체적인 구현 방법을 명시하는 기법
원칙 : 변경이 쉽도록 구조화되어야하고, 특정 기능을 수행하는 데 필요한 자료만 사용하도록 규제, 모듈 단위로 분할 설계, 계층적 구조 
유형 : 구조 모델링(컴포넌트들의 유형:프로시저,데이터 구조, 모듈, 파일 구조) / 행위 모델링 (상호 작용하는 지 모델링 :데이터 흐름, 변환, 저장 등)

2.소프트웨어 설계 유형
자료 구조 설계, 아키텍처 설계, 인터페이스설계, 프로시저설계, 협약에 의한 설계



