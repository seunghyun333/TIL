(1) 스토리지
1. 개념: 데이터를 보존하고 가능한 한 간편하게 엑세스할 수 있도록 개발된 기술을 사용하여 정보를 보존하는 저장장치
2. 구성 : 
    1. DAS: Direct Attached Storage
        데이터서버와 외장형 저장장치를 전용 케이블로 직접 접속하는 방법 
        장점 : 전용라인의 사용으로 주어진 성능이 보장되며 안정성도 뛰어남
        단점 : 저장장치에 따른 접속방법이 서로 상이하여 저장장치 공유애 문제가 있음 
    2. NAS : Network Attached Storage
        LAN을 통해 스토리지와 서버를 접속하는 방식, 파일서버를 토앟ㄴ 파일 시스템을 공유
        장점 : 데이터 저장 장치와 서버 간의 독립성을 유지
        단저 : 데이터 접근 요청에 의한 파일 서버의 병목현상 발생가능, 파일 서버 종료시 스토리지 접근이 불가능
    3. SAN : Storage Area Network
        서버가 광섬유 채널을 통하여 스토리지를 연결하는 기법 
        장점 : DAS 의 접속 한계성을 극복하여, n개의 서버가 m개의 저장장치 접속가능
        단점 : 이기종 서버 환경을 지원하지 않음, 공유 가능한 파일 시스테모가 데이터형식이 제한

(2) 분산데이터베이스 
1. 개념 : 네트워크상에서 여러 컴퓨터에 물리적으로 분산되어 있지만, 하나의 데이터베이스처럼 인식하도록 논리적으로 통합된 데이터베이스이다. 
2. 장점 : 분산 제어가 용이, 지역 자치성이 높음(자신의 데이터를 지역적으로 제어하여 우너격 데이터 처리 센터에 대한 의존도가 감소)
        효용성과 융통성이 높음, 복제 및 분산을 통해 사용자 측면에서는 향상도니 성능을 제공, 장애로 인한 데이터 유실 복구에도 효과적, 시스템 확장이 용이
   단점 : 복잡성이 증가(사이트 간 조정 문제로 인해 데이터베이스 설계 및 소프트웨어 개발 비용이 증가), 성능 저하(분산 데이터베이스 간 메시지 교환 등으로 인한 오버헤드 발생, 
        개발 비용의 증가(전문인력 부족으로개발 비용과다)
3. 분산 데이터베이스 구성 
    * 전역 스키마 : 데이터베이스가 마치 분산되어 있지 않은 것처럼 분산 데이터베이스에 포함된 모든 데이터를 정의
    * 분할 스키마 :  분산을 위해 단편화된 구성에 대한 정의(일대다 관계)
    * 할당 스키마 : 단편들의 위치 정보를 정의 ,유형에 따라 중복 또는 비중복인지가 결정됨
    * 지역 스키마 : 물리적 이미지를 해당 지역 DBMS가 관리할 수 있도록 저장하기 위해 변환 
4. 분산 데이터베이스 시스템 구성 
    * 분산 처리기 : 자체적으로 처리 능력을 가지며, 지리적으로 분산되어 있는 컴퓨터 사스템
    * 분산 데이터베이스 : 지리적으로 분산되어 있는 데이터베이스로서 해당 지역의 특성에 맞게 디이테베이스가 구성 
    * 분산 네트워크  : 분산 처리기들을 통신망으로 여녈하여 논리적으로 하나의 시스템처럼 작동할 있도록 하는 네트워크 
5. 분산데이터베이스의 투명성
    1. 개념 : 물리적으로 분산되어 있는 데이터를 네트워크를 통해 논리적으로 동일한 시스템에서 하나의 데이터베이스처럼 이용하는 기술 
    2. 종류 : 위치 투명성, 복제 투명성, 병행 투명성 , 분할 투명성, 장애 투명성(데이터의 무결성)

(3) 데이터베이스 이중화 구성
1. 개념 : 물리적으로 떨어져 있는 여러 개의 데이터베이스에 대하여 로컬 데이터베이스의 변경된 내용을 원격데이터베이스에 복제하고 관리하는 기술 
2. 목적 : DB의 무정지 서비스를 가능하게 한다. 사용자는 하나의 DB에 대해서만 작업을 수행한다, DB 이중화시스템에 연결되어 있는 다른 DB에도 작업내용이 동일하게 적용한다. 여러 개의 DB를 동시에 관리한다.
3. 이중화 형태
    액티브-액티브 : 여러 노드가 동시에 가동되는 형태, 두 노드가 동시에 동작하므로 성능이 좋음 
    액티브-스탠바이 : 하나의 노드만 가동하고, 나머지 노드들은 대기하는 형태, 장애 발생시 active로 변경

(4) 데이터베이스 암호화
1. 개념 : 데이터베이스에 저장된 데이터를 읽기 어려운 값으로 변환하여 권한이 없는 제3자가 볼 수 없도록 저장하는 기술 
2. 유형 
    응용 프로그램 자체 암호화 : 암복호화 모듈이 API 라이브러리 형태로 각 애플리케이션 서버에 설치되고 모듈을 호출하는 방식
    DB 서버 암호화 : 모듈이 DB 서버에 설치되고 DB서버에서 모듈을 호출
    DBMS 자체 암호화
    DBMS 암호화 기능 호출 : 응용프로그램에서 DB서버의 DBMS 커널이 제공하는 암복호화 API를 호출하는 방식
    운영체제 암호화 : OS에서 발생하는 물리적인 입출력을 이용한 암복호화 방식으로 DBMS의 데이터 파일 암호화하는 방식 
3. 데이터베잉스 암호화 적용방식 : 
    컬럼 암호화
        특정 컬럼을 암호화하여 데이터를 보관하는 방식, API, 플러그인, 하이브리드 방식(암복호화 모듈을 설치하고 수행)
    블록 암호화
        애플리케이션상 수정 필요 없이 DB, OS 자체적으로 블록 단위로 암호화를 제공하는 방식,, TDE 방식, 파일 암호화 방식 (기본 제공하는 방식으로 암호화)

(5) 접근제어
1. 개념 : 불법적인 데이터의 접근으로부터 데이터베이스를 보호하는 기법, DB는 가장 내부에 위치하고, DBMS 자체는 강력한 보안기능을 제공하기 때문에 접근권한을 가진 사용자가 권한을 남용하여 유출하거나 변조가 가장 튼 위험 
    정보보안을 위한 접근 제어의 특징 : 적절한 권한을 가진 인가자만 특정 시스템이나 정보에 접근할 수 있도록 통제하는 행위, 시스템 및 네트워크에 대한 접근제어의 가장 기본적인 수단은 IP와 서비스포트
                                네트워크 장비에서 수행하는 IP에 대한 접근제어로는 관리 인터페이스의 접근제어와 ACL(Access Control List)등이있다.
2. 접근제어 구성요소
    - 접근제어 정책 : 자원에 접근하는 사용자의 접근 모드 및 모든 접근 제한 조건 정의
    - 접근제어 메커니즘: 시도된 접근 요청을 정의된 규칙에 대응시켜 검사함으로써 불법적 접근 방어
    - 접근제어 보안 모델 : 시스템의 보안 요구를 나타내는 요구 명세로부터 출발하여 정확하고 간결한 기능적 모델 표현 
3. 접근제어 정책
    -1. 신원기반 접근제어 정책 (DAC라고 불리고, IBP(단일 사용자가 하나의 객체에 대해 허가를 부여받아 사용하는 정책), GBP(복수 사용자가 하나의 객체에 같은 허가) 정책이 있음)
    -2 규칙기반 접근제어 정책 : 객체에 포함된 정보의 비밀성과 이러한 비밀성의 접근정보에 대하여 주체가 갖는 권한에 근거하여 객체에 대한 접근을 제한하는 방법,
                            MAC이라 불림
                            MLP정책 : 사용자 및 객체가 가각 부여도니 기밀 분류에 따른 정책
                            CBP정책 : 조직내 특정 집단별로 구분된 기밀 허가에 따른 정책
    -3. 역할기반 접근제어 정책 : 중앙관리자가 주체와 객체의 상호관계를 제어하며 조직내에서 맡은 역할에 기초하여 자원에 대한 접근 허용 여부를 결정한다.
                            RBAC라고 부름 
4. 접근제어 메커니즘 
    ACL : 주체가 디렉토리나 파일과 같은 특정 시스템 객체에 접근할 수 있는 허가 받은 접근 종류들이 기록된 목록 
    CL : 주체에게 허가된 자원 및 권한의 목록
    SL : 객체에 부여된 보안 속성 정보의 집합
    *ACL과 CL의 차이
    ACL : 주체가 객체에 어떤 행위를 할 수 있는지 표현하는 매커니즘, 주체가 디렉토리나 파일과 같은 특정 시스템 객체에 접근할 수 있는 허가 바등ㄴ 접근 종류들이 기록된 목록, 구분되어야할 주체가 비교적 소수일 때 적합
    CL : 주체에 대하여 저장된 접근허가 목록을 관리하는 메커니즘, 주체에게 허가된 자원 및 권한의 목록(주체에 할당), 비교적 객체가 작은 겨우 적합 