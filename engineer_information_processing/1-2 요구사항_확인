Chapter 02 요구사항 확인 

#1 요구분석 기법

(1) 요구분석의 개념 
    => 사용자의 요구 추출, 목표 설정, 어떤 방식으로 해결할지 결정하는 단계
    => 사용자의 요구사항 중 모호한 부분 걸러내기 위한 과정

(2) 요구분석의 특징
    * 개발의 첫 단계로 사용자의 요구에 대한 이해하는 단계
    * 문서화를 통해 유지보수 활용
    * 구체적인 명세를 위해 논리적인 소단위 명세서 활용
    * 비용 많이 드는 단계가 아니고, 도메인 분석은 요구에 대한 정보를 수집, 분석하여 이를 토대로 모델링을 한다.

(3) 요구사항 분석 단계 절차
    -1. 요구사항 분류 (기능, 비기능 확인 & 소프트웨어에 미치는 영향, 생명주기 동안 변겨이 발생하는 지 파악)
    -2. 개념 모델링 생성 및 분석 (현실 세계의 상황을 모델링 하는것, 다양한 모델 및 다양한 다이어그램 사용)
    -3. 요구사항 할당 (요구사항을 만족시키기 위한 아키텍처 구성요소 식별, 다른 요소와 어떻게 상호 작용하는지 분석)
    -4. 요구사항 협상 (두 명의 이해관계가가 상충되면 우선순위 부여 후 합의)
    -5. 정형 분석 (구문과 의미를 갖는 정형화된 언어를 사용하여 수학적 기호로 표현, 요구사항 분석의 마지막 단계)

(4) 요구사항 분석 기술
    => 청취, 인터뷰와 질문, 분석, 중재, 관찰, 작성, 조직, 모델 작성 

(5) 요구사항 분석에 사용하는 기능 모델링 기법 

    * 1. 데이터 흐름도(DFD: Data Flow Diagram)
        개념: 데이터가 프로세스에 따라 흐르면서 변환되는 모습을 나타낸 그림으로 가장 보편적 사용 되며, 자료 흐름 그래프, 버블 차트라고도 한다.
        특징 :  구조적 분석 기법에 이용된다.
                데이터의 흐름에 중심을 두는 분석용 도구이다.
                제어의 흐름은 중요하지 ㅇ낳다.
                시간 흐름을 명확히 표현할 수 없다.
        구성요소 : 처리기(Process), 데이터 흐름(Data Flow), 데이터 저장소(Data Store), 단말(Terminator)
            처리기 : 입력된 데이터를 원하는 형태로 변환하여 출력하기 위한 요소 : 원
            데이터흐름 : DFD의 구성요소들 간 주고받는 데이터 흐름을 나타내는 요소 : 화살표
            데이터저장소 : 평행선 안에는 데이터 저장소의 이름을 넣음 : 평행선
            단말 : 프로세스 처리 과정에서 데이터가 발생하는 시작과 종료를 나타내고, 외부 엔티티 이름을 넣음 : 사각형 

    * 2. 자료사전(DD: Data Dictionary)        
        개념: 자료 요소, 요소들의 집합, 흐름, 저장소의 의미와 관계, 관계 값, 범위, 단위들을 구체적으로 명시하는 사전
            파일 혹은  db에 있는 자료에 대한 자료 또는 각 자료 항목에 주어진 이름과 길이 그리고 서술과 같은 데이터를 포함하는 참조를 위한 작업이다. 
        목적: 특정한 자료 용어의 의미, 용어의 정의를 조정하고 취합하여 문서로 명확히 하는 목적이 있다.
            자료 흐름도에 나타나는 어떤 자료의 흐름도 자료 사전에 정의되어 있어야 한다.

        기호    
            = 정의
            + 자료의 연결
            () 자료 생략 가능함
            {} 반복
            [] 선택
            ** 주석 

        작성원칙 : 자료의 의미 기술, 자료 구성항목의 기술, 동의어 규정 준수, 자료 정의의 중복 제거

(6) 요구사항 분석이 어려운 이유 
    개발자와 사용자 간의 지식과 표현의 차이, 모호한 사용자의 요구사항, 계속 변하는 요구사항, 예외가 많아 열거와 구조화가 어려움 


#2 UML

(1) UML(Unified Modeling Language)의 개념
    객체 지향 소프트웨어 개발 과정에서 산출물을 명세화, 시각화, 문서화 할 때 사용되는 모델링 기술과 방법론을 통합해서 만든 표준화된 범용 모델링 언어

(2) 특징 : 가구명문
    1. 가시화 언어 : 개념 모델 작성 시 오류가 적고 의사소통이 용이
    2. 구축 언어 : 다양한 프로그래밍 언어로 실행 시스템의 예측 가능
    3. 명세화 언어 : 정확한 모델 제시, 완전한 모델 작성 가능
    4. 문서화 언어 : 시스템에 대한 평가 및 의사소통의 문서 