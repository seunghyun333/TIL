(1) 어플리케이션 패키징
1. 개념 : 개발이 완료된 제품 소프트웨어를 배포하고 설치할 수 있도록 고객에게 전달하기 위한 형태로 제작하고, 설치와 사용에 필요한 제반 내용을 포함하는 매뉴얼을 작성하는 활동
2. 특징 : 사용자 중심, 신규 및 변경 개발 소스 식별, 모듈화하여 상용 제품으로 패키징
3. 고려사항 : 사용자 실행 환경의 이해, 사용자 관점에서의 패키징 고려사항(사용자시스템환경정의, UI제공, 관리서비스형태로제공, 패키징의 변경 및 개선관리 고려)
4. 어플리케이션 패키징 프로세스 
    - 1. 기능 식별 : IO데이터, Function Data Flow 
    - 2. 모듈화 : 응집도 및 결합도
    - 3. 빌드 진행 : 컴파일
    - 4. 사용자 환경 분석 : User Configure File 
    - 5. 패키징 적용 시험 : UI 편의성 체크
    - 6. 패키징 변경 개선 : 개선 변경점 재배포 

    *모듈화 : 기능을 분할하고 추상화하여 소프트웨어의 성능을 향상시키고 유지보수 효과적으로 구현하기 위한 기법
    *결합도: 소프투웨어 구조에서 모듈관 연관승을 측정하는 척도(낮을 수 록 좋음)
    *응집도 : 모듈의 독립성을 나타내는 개년ㅁ으로 하나의 모듈 내부 처리 요소들 간에 기능적 연관도를 측정하는 척도 (높을수록 좋음)

5. 어플리케이션 패키징 릴리즈 노트
    - 1. 개념 : 어플리케이션 최종 사용자인 고객과 잘 정리된 배포 정보를 공유하는 문서. 상세 서비스를 포함하여 수정,변경또는 개선되는 정보에 대한 사항이 제공된다.
    - 2. 작성항목 
        - 헤더
        - 개요
        - 목적
        - 이슈요약
        - 재현항목
        - 수정/개선 내용
        - 사용자 영향도
        - 소프트웨어 지원 영향도
        - 노트
        - 면책 조항
        - 연락 정보 
    - 3. 작성 프로세스 
        모듈식별 - 릴리즈정보확인 - 릴리즈 노트개요 - 영향도체크 - 정식 릴리즈 노트 작성 - 추가 개선 항목 식별 


(2) 어플리케이션 배포 도구
1. 개념 : 배포를 위한 패키징 시에 디지털 콘텐츠의 지적 재산권을 보호하고 관리하는 기능을 제공하며, 안전한 유통과 배포를 보장하는 도구이자 솔루션이다. 
2. 기술요소 : 암호화, 키 관리, 식별 기술, 저작권 표현, 암호화 파일 생성, 정책 관리, 크랙 방지, 인증 등이 있다. (암키식저 파정크인)
 * 크랙 : 소프트웨어를 수정하여 소프트웨어 복사 방지나 소프트웨어 조작 보호 등을 비활성화하거나 제거하는 일