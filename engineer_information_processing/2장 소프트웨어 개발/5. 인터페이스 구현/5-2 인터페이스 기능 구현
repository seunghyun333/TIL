(1) 인터페이스 보안
1. 인터페이스 보안의 중요성 
2. 인터페이스 보안 취약점 
    데이터 통신 시 데이터 탈취 위협 
    데이터 통신 시 데이터 위 변조 위협 
    *스니핑 : 공격 대상에게 직접적으로 공혁을 하지 않고 데이터만 몰래 들여다 보는 수동적 공격 기법 
3. 인터페이스 보안구현 
    1. 시큐어코딩가이드 적용 : 입력 데이터 검증 및 표현 / 보안기능 /시간및 상태/에러처리/ 코드 오류/캡슐화/API오용
    2. 데이터 베이스 보안 적용 
    3. 데이터 베이스 암호화 기법 : API, plug-in, Hybird 방식 
    4. 중요 인터페이스 데이터의 암호화 전송 
        S-HTTP : 웹상에서 네트워크 트래픽을 암호화하는 주요 방법 중 하나로 클라이언트와 서버 간에 전송되는 모든 메세지를 각각 암호화하여 전송하는 프로토콜 
        IPSec(IP Security) : IP계층(3계층)에서 무결성과 인증을 보장하는 인증헤더와 기밀성을 보장하는 암호화를 이용하여 양 종단 간 구간에 보안 서비스를 제공하는 터널링 프로토콜 
                            주요 프로토콜은 AH, ESP, IKE가 있고, IPSec 정책에는 SPD,SAD가 있음 
                            AH: 인증 프로토콜, ESP: 암호화 프로토콜, IKE 키관리 프로토콜 
        SSL / TLS : 전송계층(4계층)과 응용계층(7계층)사이에서 클라이언트와 서버 간의 웹데이터 암호화(기밀성), 상호 인증 및 전송 시 데이터 무결성을 보장하는 보안 프로토콜
                    인증모드는 익명 모드, 서버 인증 모드, 클라-서버인증 모드가 있음
                    IPSEC하고는 다르게 클라와 서버간에 상호인증, 암호 방식에 대해 협상을 거치는 특징 
                    특정 암호 기술에 의존하지 않고 다양한 암호 기술이 적용 
                    https://~ 표시형식과 443 포트 이용 


(2) 소프트웨어 연계 테스트 
1. 인터페이스 데이터 포맷 
    - JSON(비동기 브라우저/서버 통신(AJAX)를 위해 "속성-값 쌍", "키-값 쌍"으로 이루어진 데이터 오브젝트를 전달하기 위해 인간이 읽을 수 있는 텍스트를 사용하는 개방형 표준 포맷)
    - XML(W3C에서 개발된, 다른 특수한 목적을 갖는 마크업 언어를 만드는 데 사용하도록 권장하는 다목적 마크업 언어)
    - YAML (데이터를 사람이 쉽게 읽을 수 있는 형태로 표현하기 위해 사용하는 데이터 직렬화 양식 )
2. 인터페이스 데이터 교환 기술 
    1. REST : 웹과 같은 분산 하이퍼 미디어 환경에서 자원의 존재/상태 정보를 표준화 된 HTTP 메서드로 주고받는 웹 아키텍처
    2. AJAX : 자바스크립트를 사용하여 웹 서버와 클라이언트 간 비동기적으로 XML 데이터를 교환하고 조작하기 위한 웹 기술 
