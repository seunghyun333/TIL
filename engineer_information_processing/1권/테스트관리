1. 애플리케이션 테스트 케이스 설계

테스트 레벨 종류
단위테스트
통합테스트
시스템테스트 : 전체시스템 또는 제품의 동작에 대해 테스트 /기능,비기능 요구사항 테스트 
인수테스트 : 계약상 요구사항 만족되었는지 확인 / 알파,베타테스트

*알파검사 : 선택된 사용자가 개발자 환경에ㅓㅅ 통제된 상태로 갭라자와 함께 수행하는 인수테스트
*베타검사 : 필드 테스팅이라고 불리며, 개발자 없이 고객의 사용 환경에 소프트웨어를 설치하여 검사를 수행하는 인수테스트 

*테스트 오라클 : 테스트의 결과가 참인지 거짓인지 판단하기 위해 사전에 정의된 참값을 입력, 비교

*블랙박스 테스트 
외부사용자의 요구사항 명세를 보면서 수행하는 기능테스트
동등분할테스트, 경계값분석, 결정테이블, 상태전이, 유스케이스, 분류트리, 페어와이즈, 원인결과 그래프, 비교, 오류추정

*화이트박스 테스트 
응용프로그램의 내부구조와 동작을 검사 , 모듈 내부 직접관찰 . 및테스트 
구문커버리지, 결정커버리지, 조건 커버리지, 조건-결정커버리지, 변경조건-결정 커버맂, 다중조건 커버리지, 기본경로 커버리지, 제어흐름테스트, 데이트흐름테스트, 루프 테스트 



3. 애플리케이션 성능 개선
O(1) : 알고리즘 수행시간이 입력데이터수와 관계없이 일정 
O(nlog2n) : 퀵정렬, 병합벙렬, 힙정렬
O(n2) : 거품정렬,삽입정렬,선택정렬 

해싱함수 종류 :
제산법- 나머지 연산자를 사용, 제곱법, 숫자분석법-자리별로 어떤 분포인지 조사, 폴딩법-XOR, 기수 변환법-키를 변환, 무작위방법

퀵 정렬 : 피벗을 두고 왼쪽,오른쪽, 많은 자료이동을 없애고 하나의 파일을 부분적으로 나누어가며 정렬 

힙 정렬 : 정렬할 입력 레코드들로 을 구성하고 가장 큰 키 값을 갖는 루트 노드를 제거하는 과정을 반복하여 정렬, 완전이진 트리로 입력자료의 레코드 구성, 최적, 평균, 최악 수행시간 = O(nlog2n)


*버블정렬 : 1PASS - 한 바퀴 도는거 , 앞 뒤 값 비교하여 정렬
*삽입정렬 : 1PASS - 맨 앞 고정 후, 두 번째 값 자리 배치. 이미 정렬된 부분과 비교하여 자신의 위치를 찾아 삽입 
*선택정렬 : 1PASS - 정렬되지 않은 값 중 가장 작은 값을 찾아 정렬되지 않은 부분의 가장 앞의 데이터와 교환해나가는 알고리즘 
*이진검색방법 : 반씩 나눠가며 찾기 

*McCabe Cyclomatic 공식: E - N + 2 
E엣지 N노드

*알고리즘 설계 기법 : 분할과 정복(Divide and Conquer), 동적 계획법(Dynamic Programming), 탐욕법(Greedy), 백트래킹 (Backtracking)
*정적분석도구 : 소스 코드의 잠재적인 문제를 발견, pmd, checkstyle, cppcheck
