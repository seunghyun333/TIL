1. 데이터베이스 시스템에서 삽입, 개신, 삭제 드으이 이벤트가 발생할 때마다 관련 작업이 자동으로 수행되는 절차형 SQL은 무엇인가? 
  => 트리거
* 프로시저 : 일련의 쿼리들을 마치 하나의 함수처럼 실행하기 위한 쿼리의 집합
* 사용자 정의 함수 : 일련의 SQL 처리를 수행하고, 수행결과를 단일 값으로 반환할 수 있는 절차형 SQL

2. SQL을 가장 빠르고 효율적으로 수행할 최적의 경로를 생성해주는 DBMS 내부의 핵심엔진 : 옵티마이저 

---
1. 커밋 : 트랜잭션을 메모리에 영구적으로 저장하는 제어어 
  롤백 : 오류가 발생했을 때 오류 이전의 특정 시점(CHECK POINT) 상태로 되돌려주는 제어어
  체크포인트 : ROLLBACK을 위한 시점을 지정하는 제어어
2.  200, 3, 1
3. ALTER TABLE 사원 DROP 생년월일; 
4. CREATE TABLE 사람 (
      이름 VARCHAR(10),
      생년월일 CHAR(8) NOT NULL);

5. CREATE VIEW 학생뷰 AS SELECT 학번, 이름 FROM 학생 WHERE 전공 = '전산';

6. CREATE INDEX 학번인덱스 ON 학생(학번);

7. CREATE TABLE 교수
  ( 교번 VARCHAR(10) PRIMARY KEY,
    사이즈 VARCHAR(10),
    임용일 VARCHAR(8) NOT NULL);

8. ALTER TABLE 성적 ADD 학점 VARCHAR(4) NOT NULL; 
9. SELECT 학번, 이름 FORM 학생 WHERE 학과 = "전산과";
10. 11- 17
11. SELECT 부서, SUM(급여) AS 급여합계 FROM 급여 GROUP BY 급여 HAVING SUM(급여) >= 6000;
12. SELECT 이름, 과목, 학점 FROM 성적 ORDER BY 학점 DESC, 이름 ASC;
13. SELECT A.책번호, A.책명, B.가격 
    FROM 도서 A INNER JOIN 도서가격 B
    ON A.책번호 = B.책번호
14. SELECT A.책번호 AS A.책번호, A.책명 AS A.책명, B.책번호 AS B.책번호, B.가격 AS B.가격
    FROM 도서 A FULL OUTER JOIN 도서가격 B
    ON A.책번호 = B.책번호;
15. SELECT 가격
    FROM A
   WHERE IN (SELECT MAX(가격) FROM 도서가격) A ;

=> SELECT MAX(가격) AS 가격 FROM 도서가격 WHERE 책번호 IN (SELECT 책번호 FROM 도서 WHERE 책명='자료구조');

16. INERT INTO 학생 (학번, 성명, 학년, 수강과목) VALUES (3000, 장길산, 3, 수학);

17. UPDATE 학생 SET 수강과목 = '영어' WHERE 학번 = 1000;

18. DELETE FROM 학생 WHERE 학번 = 3000;

19. GRANT SELECT ON 사원 TO 홍길동;

20. REVOKE UPDATE ON 학생 FROM 장길산; 

21. AVG, COUNT
22. UPDATE EMPLYEE SET SALARY = 250 WHERE AGE < = 25;
23. REVOKE SELECT ON 학생 FROM 홍길동
24. 프로시저
25. 트리거
26. 통계 정보가 없는 상태에서 사전 등록된 규칙에 따라 질의실행 계획을 선택하는 옵티마이저인 "규칙기반 옵티마이저(RBO)"와 
  통계 정보로부터 모든 접근 경로를 고려한 질의실행 계획을 선택하는 오티마이저인 "비용기반 옵티마이저(CBO)가 있다.

28. OLAP 는 의사결정 지원 시스템으로, 사용자가 동일한 다양한 방식으로 바라보면서 다차원 데이터 분석을 할 수 있또록 도와주는 기술
    OLTP 는 데이터웨어하우스에서 데이터 소스를 제공하고, OLAP는 해당 데이터를 분석한다. 

