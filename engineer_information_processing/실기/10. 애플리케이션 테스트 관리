1. 애플리케이션 테스트 케이스 설계 
[기출문제]
1. 살충제 패러독스 : 동일한 테스트 케이스에 의한 반복적 테스트는 새로운 버그를 찾지 못한다는 원리
2. 테스트의 종류 중 동치 분할 테스트, 경계값 분석 테스트 등의 종류가 있는 테스트 기법 : 블랙박스 테스트
3. 분기커버리지 : 전체 조건식이 적어도 한 번은 참과 거짓의 결과를 모두 수행 
4. 테스트 오라클 중 특정한 몇 개의 입력값에 대해서만 기대하는 결과를 제공해주는 오라클 : 샘플링 오라클 
5. 동등분할 테스트 : 유효값/무효값을 그룹피아여 대표값 테스트 케이스를 도출하여 테스트하는 기법 
6. 0 <= x <= 10이면, -1, 0, 10, 11 검사 : 경계값 분석 테스트
    유효값, 무효값 나누어서 대표값을 검사 : 동등 분할 테스트
7. 그래프를 활용하여 입력 데이터 간의 관계 및 출력에 미치는 영향을 분석하여 효용성이 높은 테스트케이스를 선정하여 테스트하는 기법 : 원인-결과 그래프 테스트
8. 하이트박스 테스트 검증 기준 
  구문 커버리지 : 최소 한 번은 모든 문장 수행
  결정 커버리지 : 결정 검증 기준, 선택 커버리지, 조건별 true/false일 때 수행
  조건 커버리지 : 전체 조건식에 상관없이 개별 조건식의 true/false 에 대해 수행 
9. 개별 모둘, 서브루틴이 정상적으로 실행되는지 확인 : 단위테스트
    인터페이스 간 시스템이 정상적으로 실행되는지 확인 : 통합테스트
10. 테스트 케이스 구성요소 
    테스트 조건 : 테스트 간의 종속성, 테스트 수행 전 실행되어야 할 고려 사항
    테스트 데이터 : 테스트 실행 시 입력할 입력값, 선택 버튼, 체크리스트 값등 
    예상결과 : 테스트 실행 후 출력 데이터, 결과 화면, 기대 동작등 
11. 블랙박스 테스트 기법
    동등분할 테스트 : Equivalence Partitioning Testing
    경계값 분석 테스트 : Boundary Value Analysis Testing
    결정 테이블 테스트 : Decision Table Testing
    상태 전이 테스트 : State Transition Testing
    유스케이스 테스트 : Use Case Testing
    분류 트리 테스트 : Classification Tree Method Testing
    페어와이즈 테스트: Pairwise Testing
    원인-결과 그래프 테스트 : Cause-Effect Graph Testing
    비교 테스트 : Comparison Testing
    오류 추정 테스트 : Error Guessing Testing
12. V모델 테스트 : 단통시인 
    모듈설계 -모듈 검증 -> 단위테스트
    시스템 설계 -인터페이스 검증-> 통합 테스트
    요구분석-요구분석검증->시스템테스트
    v모델 마지막 : 인수테스트 
13. 베타 테스트 : 사용자의 환경에서 개발자 없이 수행하는 테스트
    알파 테스트 ; 개발자 환경에서 통제된 상태로 개발자와 함께 수행하는 테스트 
14. 회귀 테스트(Regression Testing) 
    소프트웨어의 변경 사항이 발생하면 수행하는 테스트로, 주로 유지보수 단계에서 수행, 소프트웨어 수정 시 다른 오류가 흘러 들어오므로 이를 확인하기 위하여 소프트웨어에 변경 사항이 발생할 때마다 반복적으로 수행
15. 등가 분할 후 경계값 부분에서 오류 발생 확률이 높기 때문에 경계값을 포함하여 테스트 케이스 설게 : Boundary Value Analysis
16. 전체 조건식의 영향은 고려하지 않고, 결정 포인트 내의 각 개별 조건식이 적어도 한 번은 참과 거짓의 결과가 되도록 수행하는 테스트 커버리지 : 조건 커버리지 
17. 입력 데이터의 영역을 유사한 도메인 별로 유효값/무효값을 그룹핑하여 대표값을 테스트 케이스로 도출하는 테스트기법 : Equivalence Partitioning 

2. 애플리케이션 통합테스트
[기출문제]
1. 애플리케이션을 실행하지 않고 소스 코드에 대한 코딩 표준, 코딩 스타일 ,코드 복잡 도 및 남은 결함을 발견하기 위해 사용하는 도구 : 정적 분석 도구 
2. 상향식 테스트는 최하위 모듈로부터 위쪽 방향을 제어의 경로를 따라 이동하면서 테스트와 통합을 수행하는 방식이고, 하위 모듈을 포함하는 테스트 드라이브가 필요하다. 
3.  테스트 스텁 : 제어 모듈이 호출하는 타 모듈의 기능을 단순히 수행하는 더미 모듈로 하향식 통합테스트 수행 시 필요하다.
    테스트 드라이버 : 상위의 모듈에서 데이터의 입력과 출력을 확인하기 위한 더미 모듈로 상향식 통합 테스트 수행 시 필요하다. 
[예상문제]
상향식 통합 테스트와 하향식 통합 테스트 방식을 결합 : 샌드위치 통합 테스트
모든 모듈을 동시에 통합한 후 테스트 : 빅뱅 통합 테스트 

3. 애플리케이션 성능 개선 
[기출문제]
1. 애플리케이션 성능 측정 지표 : 처응경자
    처리량 : 애플리케이션이 주어진 시간안에 처리할 수 있는 트랜잭션의 수
    응답시간 : 사용자 입력이 끝난 후, 애플리케이션의 응답 출력이 개시될 때까지의 시간
    경과 시간 : 애플리케이션에 사용자가 요구를 입력한 시점부터 트랜잭션을 처리 후 그 결과의 출력이 완료할 때까지 걸리는 시간
    자원 사용률 : 애플리케이션이 트랜잭션을 처리하는 동안 사용하는 CPU 사용량, 메모리 사용량, 네트워크 사용량
2. 리팩토링의 목적 : 복잡한 코드의 단순화, 소스의 가독성을 통해 유지보수성 향상, 생산성 향상, 품질 향상이 있다. 
[예상문제]
2. 클린코드 작성 원칙 : 가단의 중추
가독성/ 단순성/의존성 최소/중복성 제거/ 추상화 
3. 배드 코드
    외계인코드 : 오래되거나 참고문서 또는 개발자가 없어 유지보수 작업이 어려운 코드
    스파게티 코드 : 작동은 정상적으로 하지만, 사람이 코드를 읽으면서 그 코드의 작동을 파악하기는 어려운 코드
